#
ZBUILD=zbuild
DIG=dig
GIT=git
MTN=mtn
#
##use absolute paths below
#
REGISTRY_BASE_PATH=/home/reboot/workspace/zonebuild/scripts/build
REGISTRY_PATH=${REGISTRY_BASE_PATH}/net.dn42.registry/data
OUT_PATH=/home/reboot/workspace/zonebuild/scripts/build
#

DEFAULT_TTL=86400
CONTACT_EMAIL="unknown.nic.dn42"
PERSON_HANDLE=DUMMY-DN42

##
ARPA_ZONES=(10.0.0.0_8 172.20.0.0_16 172.21.0.0_16 172.22.0.0_16 172.23.0.0_16 172.31.0.0_16)
ARPA_IPV6_ZONES=(d.f)
ARPA_TIERS=1


## tier 0
SERVER_NAME_TIER0="unknown.root-servers.dn42"
MERGE_ICANN_ROOT=1
MERGE_RESTRICT_ZONES=
ICANN_AXFR_ENABLED_ROOTS=(193.0.14.129 192.228.79.201)
TIER0_IPV6=1
TIER0_TTL=86400

## tier 1
SERVER_NAME_TIER1="unknown.zone-servers.dn42"
TIER1_FORWARD_ZONES_RESTRICT=(root-servers.dn42 zone-servers.dn42 in-addr-servers.dn42 dn42-servers.dn42)
TIER1_ZONES=(ffac ffamt 020 ffa ffbit ffbsee ffbrb hack ffc ffdh dn42 ff3l ffec fferz ffe ffeu fffl ffdus ffffm fmdk fffr fffd ffge ffggrz ffgl ffgoe ffhgw ffgro ffhal ffhh ffhm ffh ffharz helgo ffhef ffherne ffin ffj ffka ffki ffgt fflz fflln ffhl fflux icvpn ffms mueritz ffalpen ffmo ffnord ffnw ffobh ffoh ostvest ffpb ffpi ffrade ffrgb ffrek ffrg rzl ffsaar ffsi ffsg ffws fftr fftdf fftut ffue ffulm ffwdh ffwk ffw)
TIER1_AUTH_ZONES=(dn42)
TIER1_IPV6=1
TIER1_TTL=3600

## tier 1 arpa
SERVER_NAME_TIER1_ARPA="unknown.in-addr-servers.dn42" # /24 
BUILD_GLUE_RECORDS=0
BUILD_RFC2317_SUPERNETS=1
##
SERVER_NAME_TIER2_ARPA="unknown.dn42-servers.dn42" # < /24

##
GIT_ADDRESS=https://github.com/nixnodes/zonebuild
GIT_BRANCH=master
##
MASTERS=""

##
ICVPN_GIT_ADDRESS=https://github.com/freifunk/icvpn-meta
ICVPN_GIT_BRANCH=master

##
PULL_BEFORE_BUILD=1

SYNC_SERVERS=(  
		"mtn://172.22.177.77/?net.dn42.registry"
		"mtn://172.22.228.11/?net.dn42.registry"
		"mtn://198.199.185.161/?net.dn42.registry"		
)


##
##############################################################################
##                                                                          ##
## DO NOT COPY ANY VARIABLE OR FUNCTION BELOW INTO USER CONFIGURATION FILES ##
##                                                                          ##
##############################################################################
BASE_PATH=`dirname ${0}`
##

PROC_OPTIONS=()

OPTION_HOOKS=(
	'[[ "${arg}" = "-update"  ]] && {
		git_pull ${GIT_ADDRESS} ${GIT_BRANCH} 1>&2 || echo "${0}: git pull failed" 1>&2
		${0} `echo ${@} | sed -r "s/\\-update//g"`
		exit ${?}
	}'
	
	'[[ "${arg}" = "-config"  ]] && {
		int_opt="-config"
		NCONF=`get_opt "${@}"` 
		if [ -f "${BASE_PATH}/${NCONF}" ]; then
			TIER1_ZONES=()
			POST_BUILD_HOOKS=()
			PRE_BUILD_HOOKS=()
			. "${BASE_PATH}/${NCONF}"
		else
			echo "${0}: ${BASE_PATH}/${NCONF} not found"
			exit 2
		fi
	}'
	
	'[[ "${arg}" = "root" ]] && PROC_OPTIONS+=(1)'
	'[[ "${arg}" = "zone" ]] && PROC_OPTIONS+=(2)'
	'[[ "${arg}" = "arpa" ]] && PROC_OPTIONS+=(3)'
	'[[ "${arg}" = "res" ]] && PROC_OPTIONS+=(4)'
	'[[ "${arg}" = "sync" ]] && {
		PULL_BEFORE_BUILD=1
		PROC_OPTIONS+=(5)
	}'
	
	'[[ "${arg}" = "-zonelist" ]] && {
		echo "${TIER1_ZONES[@]}"
		exit 0
	}'
	
	'[[ "${arg}" = "-authzonelist" ]] && {
		echo "${TIER1_AUTH_ZONES[@]}"
		exit 0
	}'
	
	'[[ "${arg}" = "-arpalist" ]] && {
		for zone in ${ARPA_ZONES[@]}; do
			resolv=`zbuild -build inetnum --path ${REGISTRY_PATH}/inetnum --root ${zone} -lom "treelevel=1" --noshadow --nons \
				-print "{?L:pfxsize >= 24:(?Q:(\{?C:1:startip\}.)):(noop)}{?L:pfxsize >= 16:(?Q:(\{?C:2:startip\}.)):(noop)}{?L:pfxsize >= 8:(?Q:(\{?C:3:startip\}.)):(noop)}in-addr.arpa"`
			echo "${resolv}"
		done
		exit 0
	}'
	
	'[[ "${arg}" = "-arpa6list" ]] && {
		for zone in ${ARPA_IPV6_ZONES[@]}; do
			echo "${zone}.ip6.arpa"
		done
		exit 0
	}'
	
	'[[ "${arg}" = "-icpull" ]] && {	
		icvpn_pull 
	}'
	
	'[[ "${arg}" = "-icdomlist" ]] && {		
		icvpn_domlist
	}'
		
	'[[ "${arg}" = "-getns" ]] && {		
		int_opt="-getns"
		opt=`get_opt "${@}"`
		unset opt_gen
		case ${opt} in
			root)
				opt_gen="root-servers.dn42"			
			;;
			zone)
				opt_gen="zone-servers.dn42"			
			;;
			arpa)
				opt_gen="in-addr-servers.dn42"
			;;
			rfc2317)
				opt_gen="dn42-servers.dn42"
			;;
			*)
				exit 2
			;;
		esac
		generate_forward_zone "${REGISTRY_PATH}/dns/${opt_gen}" "${opt_gen}" noglue | awk "{print \$4}" | sed -r 's/\.$//'
		exit 0
	}'	
	
)

PRE_BUILD_HOOKS=()

POST_BUILD_HOOKS=('/usr/sbin/rndc reload')

## Use these functions to add hooks from user configuration files
register_pre_hook()
{
	PRE_BUILD_HOOKS+=("${@}")
}

register_post_hook()
{
	POST_BUILD_HOOKS+=("${@}")
}

register_tier1_zones()
{
	TIER1_ZONES+=(${@})	
}

[ -f "${BASE_PATH}/${ucfile}" ] && . "${BASE_PATH}/${ucfile}" || {
	echo "${0}: could not load ${BASE_PATH}/${ucfile}" 1>&2
}


